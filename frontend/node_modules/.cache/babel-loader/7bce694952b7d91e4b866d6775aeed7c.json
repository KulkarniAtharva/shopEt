{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\Projects\\\\shopEt\\\\frontend\\\\src\\\\screens\\\\ProductsScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { signin } from '../actions/userActions';\nimport { saveProduct, listProducts } from '../actions/ProductActions';\n\nfunction ProductsScreen(props) {\n  _s();\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const [description, setDescription] = useState('');\n  const productList = useSelector(state => state.productList);\n  const {\n    loading,\n    products,\n    error\n  } = productList;\n  const productSave = useSelector(state => state.productSave);\n  const {\n    loading: loadingSave,\n    success: successSave,\n    error: errorSave\n  } = productSave; //const productDelete = useSelector(state => state.productDelete);\n  //const { loading: loadingDelete, success: successDelete, error: errorDelete } = productDelete;\n\n  const dispatch = useDispatch(); //   useEffect(() => {\n  //     if (successSave) {\n  //       setModalVisible(false);\n  //     }\n  //     dispatch(listProducts());\n  //     return () => {\n  //       //\n  //     };\n  //   }, [successSave, //successDelete\n  // ]);\n  //   const openModal = (product) => {\n  //     setModalVisible(true);\n  //     setId(product._id);\n  //     setName(product.name);\n  //     setPrice(product.price);\n  //     setDescription(product.description);\n  //     setImage(product.image);\n  //     setBrand(product.brand);\n  //     setCategory(product.category);\n  //     setCountInStock(product.countInStock);\n  //   }\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveProduct({\n      _id: id,\n      name,\n      price,\n      image,\n      brand,\n      category,\n      countInStock,\n      description\n    }));\n  }; //   const deleteHandler = (product) => {\n  //     dispatch(deleteProdcut(product._id));\n  //   }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"createproduct_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"signintitle\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: [loadingSave && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 31\n        }, this), errorSave && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: errorSave\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          className: \"name\",\n          value: name,\n          id: \"name\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"price\",\n          className: \"name\",\n          value: price,\n          id: \"price\",\n          onChange: e => setPrice(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"image\",\n          className: \"name\",\n          value: image,\n          id: \"image\",\n          onChange: e => setImage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"brand\",\n          children: \"Brand\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"brand\",\n          className: \"name\",\n          value: brand,\n          id: \"brand\",\n          onChange: e => setBrand(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"countInStock\",\n          children: \"CountInStock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"countInStock\",\n          className: \"name\",\n          value: countInStock,\n          id: \"countInStock\",\n          onChange: e => setCountInStock(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          className: \"name\",\n          value: category,\n          id: \"category\",\n          onChange: e => setCategory(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"description\",\n          value: description,\n          className: \"name\",\n          id: \"description\",\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"button primary\",\n          children: id ? \"Update\" : \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setModalVisible(false),\n          className: \"button secondary\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ProductsScreen, \"OSQIu/EM+0jzfZ9BaYWcc7TpY8Q=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ProductsScreen;\nexport default ProductsScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsScreen\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Projects/shopEt/frontend/src/screens/ProductsScreen.js"],"names":["React","useEffect","useState","Link","useSelector","useDispatch","signin","saveProduct","listProducts","ProductsScreen","props","modalVisible","setModalVisible","id","setId","name","setName","price","setPrice","image","setImage","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","productList","state","loading","products","error","productSave","loadingSave","success","successSave","errorSave","dispatch","submitHandler","e","preventDefault","_id","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { signin } from '../actions/userActions';\r\nimport { saveProduct, listProducts } from '../actions/ProductActions';\r\n\r\nfunction ProductsScreen(props) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [countInStock, setCountInStock] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const productList = useSelector(state => state.productList);\r\n  const { loading, products, error } = productList;\r\n\r\n  const productSave = useSelector(state => state.productSave);\r\n  const { loading: loadingSave, success: successSave, error: errorSave } = productSave;\r\n\r\n  //const productDelete = useSelector(state => state.productDelete);\r\n  //const { loading: loadingDelete, success: successDelete, error: errorDelete } = productDelete;\r\n  const dispatch = useDispatch();\r\n\r\n//   useEffect(() => {\r\n//     if (successSave) {\r\n//       setModalVisible(false);\r\n//     }\r\n//     dispatch(listProducts());\r\n//     return () => {\r\n//       //\r\n//     };\r\n//   }, [successSave, //successDelete\r\n// ]);\r\n\r\n//   const openModal = (product) => {\r\n//     setModalVisible(true);\r\n//     setId(product._id);\r\n//     setName(product.name);\r\n//     setPrice(product.price);\r\n//     setDescription(product.description);\r\n//     setImage(product.image);\r\n//     setBrand(product.brand);\r\n//     setCategory(product.category);\r\n//     setCountInStock(product.countInStock);\r\n//   }\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveProduct({\r\n      _id: id,\r\n      name, price, image, brand, category,\r\n      countInStock, description\r\n    }));\r\n  }\r\n//   const deleteHandler = (product) => {\r\n//     dispatch(deleteProdcut(product._id));\r\n//   }\r\n  return <div className=\"createproduct_container\">\r\n\r\n    <div className=\"signintitle\">\r\n      <h3>Create Product</h3>\r\n     \r\n    </div>\r\n    \r\n      <div className=\"form\">\r\n        <form onSubmit={submitHandler} >\r\n          \r\n            \r\n            \r\n              {loadingSave && <div>Loading...</div>}\r\n              {errorSave && <div>{errorSave}</div>}\r\n            \r\n\r\n            \r\n              <label htmlFor=\"name\">\r\n                Name\r\n          </label>\r\n              <input type=\"text\" name=\"name\" className=\"name\" value={name} id=\"name\" onChange={(e) => setName(e.target.value)}>\r\n              </input>\r\n            \r\n            \r\n              <label htmlFor=\"price\">\r\n                Price\r\n          </label>\r\n              <input type=\"text\" name=\"price\" className=\"name\" value={price} id=\"price\" onChange={(e) => setPrice(e.target.value)}>\r\n              </input>\r\n            \r\n            \r\n              <label htmlFor=\"image\">\r\n                Image\r\n          </label>\r\n              <input type=\"text\" name=\"image\" className=\"name\" value={image} id=\"image\" onChange={(e) => setImage(e.target.value)}>\r\n              </input>\r\n            \r\n            \r\n              <label htmlFor=\"brand\">\r\n                Brand\r\n          </label>\r\n              <input type=\"text\" name=\"brand\" className=\"name\" value={brand} id=\"brand\" onChange={(e) => setBrand(e.target.value)}>\r\n              </input>\r\n        \r\n            \r\n              <label htmlFor=\"countInStock\">\r\n                CountInStock\r\n          </label>\r\n              <input type=\"text\" name=\"countInStock\" className=\"name\" value={countInStock} id=\"countInStock\" onChange={(e) => setCountInStock(e.target.value)}>\r\n              </input>\r\n            \r\n            \r\n              <label htmlFor=\"name\">\r\n                Category\r\n          </label>\r\n              <input type=\"text\" name=\"category\" className=\"name\" value={category} id=\"category\" onChange={(e) => setCategory(e.target.value)}>\r\n              </input>\r\n            \r\n        \r\n              <label htmlFor=\"description\">\r\n                Description\r\n          </label>\r\n              <textarea name=\"description\" value={description} className=\"name\" id=\"description\" onChange={(e) => setDescription(e.target.value)}></textarea>\r\n            \r\n            \r\n              <button type=\"submit\" className=\"button primary\">{id ? \"Update\" : \"Create\"}</button>\r\n        \r\n            \r\n              <button type=\"button\" onClick={() => setModalVisible(false)} className=\"button secondary\">Back</button>\r\n            \r\n        \r\n        </form>\r\n      </div>\r\n\r\n\r\n\r\n        \r\n    </div>\r\n}\r\nexport default ProductsScreen;"]},"metadata":{},"sourceType":"module"}